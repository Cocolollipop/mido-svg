<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="mido-svg">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../../../.m2/repository/org/apache/xmlgraphics/batik-svggen/1.7/batik-svggen-1.7.jar"/>
        <pathelement location="../../../../.m2/repository/org/apache/xmlgraphics/batik-awt-util/1.7/batik-awt-util-1.7.jar"/>
        <pathelement location="../../../../.m2/repository/org/apache/xmlgraphics/batik-util/1.7/batik-util-1.7.jar"/>
        <pathelement location="../../../../.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar"/>
        <pathelement location="../../../../.m2/repository/org/eclipse/platform/org.eclipse.swt.cocoa.macosx.x86_64/3.105.3/org.eclipse.swt.cocoa.macosx.x86_64-3.105.3.jar"/>
        <pathelement location="../../../../.m2/repository/org/eclipse/platform/org.eclipse.swt/3.105.3/org.eclipse.swt-3.105.3.jar"/>
        <pathelement location="../../../../.m2/repository/org/eclipse/platform/org.eclipse.swt.win32.win32.x86_64/3.105.3/org.eclipse.swt.win32.win32.x86_64-3.105.3.jar"/>
        <pathelement location="../../../../.m2/repository/org/eclipse/platform/org.eclipse.jface/3.12.2/org.eclipse.jface-3.12.2.jar"/>
        <pathelement location="../../../../.m2/repository/org/eclipse/platform/org.eclipse.core.commands/3.8.1/org.eclipse.core.commands-3.8.1.jar"/>
        <pathelement location="../../../../.m2/repository/org/eclipse/platform/org.eclipse.equinox.common/3.8.0/org.eclipse.equinox.common-3.8.0.jar"/>
        <pathelement location="../../../../.m2/repository/junit/junit/4.12/junit-4.12.jar"/>
        <pathelement location="../../../../.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
        <pathelement location="../../../../.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar"/>
        <pathelement location="../../../../.m2/repository/javax/xml/bind/jaxb-api/2.2.12/jaxb-api-2.2.12.jar"/>
    </path>
    <path id="mido-svg.classpath">
        <path refid="Maven Dependencies.libraryclasspath"/>
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
    </path>
    <path id="run.ControllerSVG.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.Demojaxb.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DrawerSVGGen.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DrawFormation.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DrawFormationWithAlgorithm.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.GUISVGGenerator.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.MasterSVGGen.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.ReadFile.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.ReadXML.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.ReadXMLbis.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.TagMain.classpath">
        <path refid="mido-svg.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/resources">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/resources"/>
            <src path="src/main/java"/>
            <exclude name="**"/>
            <classpath refid="mido-svg.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <classpath refid="mido-svg.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="ControllerSVG">
        <java classname="com.github.cocolollipop.mido_svg.controller.ControllerSVG" failonerror="true" fork="yes">
            <classpath refid="run.ControllerSVG.classpath"/>
        </java>
    </target>
    <target name="Demojaxb">
        <java classname="com.github.cocolollipop.mido_svg.university.components.Demojaxb" failonerror="true" fork="yes">
            <classpath refid="run.Demojaxb.classpath"/>
        </java>
    </target>
    <target name="DrawerSVGGen">
        <java classname="com.github.cocolollipop.mido_svg.svg_generator.DrawerSVGGen" failonerror="true" fork="yes">
            <classpath refid="run.DrawerSVGGen.classpath"/>
        </java>
    </target>
    <target name="DrawFormation">
        <java classname="com.github.cocolollipop.mido_svgGenerateAuto.DrawFormation" failonerror="true" fork="yes">
            <classpath refid="run.DrawFormation.classpath"/>
        </java>
    </target>
    <target name="DrawFormationWithAlgorithm">
        <java classname="com.github.cocolollipop.mido_svgGenerateAuto.DrawFormationWithAlgorithm" failonerror="true" fork="yes">
            <classpath refid="run.DrawFormationWithAlgorithm.classpath"/>
        </java>
    </target>
    <target name="GUISVGGenerator">
        <java classname="com.github.cocolollipop.mido_svg.view.com.github.cocolollipop.mido_svg.view.GUISVGGenerator" failonerror="true" fork="yes">
            <classpath refid="run.GUISVGGenerator.classpath"/>
        </java>
    </target>
    <target name="MasterSVGGen">
        <java classname="inutilise.MasterSVGGen" failonerror="true" fork="yes">
            <classpath refid="run.MasterSVGGen.classpath"/>
        </java>
    </target>
    <target name="ReadFile">
        <java classname="com.github.cocolollipop.mido_svgGenerateAuto.ReadFile" failonerror="true" fork="yes">
            <classpath refid="run.ReadFile.classpath"/>
        </java>
    </target>
    <target name="ReadXML">
        <java classname="com.github.cocolollipop.mido_svg.xml_to_java.ReadXML" failonerror="true" fork="yes">
            <classpath refid="run.ReadXML.classpath"/>
        </java>
    </target>
    <target name="ReadXMLbis">
        <java classname="com.github.cocolollipop.mido_svg.xml_to_java.ReadXMLbis" failonerror="true" fork="yes">
            <classpath refid="run.ReadXMLbis.classpath"/>
        </java>
    </target>
    <target name="TagMain">
        <java classname="com.github.cocolollipop.mido_svg.xml.jaxb.controller.TagMain" failonerror="true" fork="yes">
            <classpath refid="run.TagMain.classpath"/>
        </java>
    </target>
</project>
